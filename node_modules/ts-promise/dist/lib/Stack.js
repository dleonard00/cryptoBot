"use strict";
/**
 * Helper class for capturing stack traces.
 *
 * Copyright (C) 2015 Martin Poelstra
 * License: MIT
 */
Object.defineProperty(exports, "__esModule", { value: true });
// TODO:
// - test/make it work in non-V8
// - parse stacks into platform-independent object-arrays
var hasStacks = (typeof Error.captureStackTrace === "function");
var Stack = /** @class */ (function () {
    function Stack(ignoreUntil) {
        if (ignoreUntil === void 0) { ignoreUntil = Stack; }
        /* istanbul ignore else */ // TODO: remove when testing for non-V8
        if (hasStacks) {
            Error.captureStackTrace(this, ignoreUntil);
        }
        else {
            this.stack = "dummy\n<no trace>";
        }
    }
    Stack.prototype.inspect = function () {
        var lines = this.stack.split("\n");
        lines.shift(); // Strip the "[object Object]" line
        return lines.join("\n");
    };
    return Stack;
}());
exports.default = Stack;
//# sourceMappingURL=Stack.js.map